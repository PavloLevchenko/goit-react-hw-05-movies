{"version":3,"file":"static/js/134.8d909c28.chunk.js","mappings":"kNAIaA,EAAY,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAqC,IAA7BC,MAAAA,OAA6B,MAArB,GAAqB,MAAjBC,MAAAA,OAAiB,MAAT,GAAS,EACzDC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAAC,IAAD,CAAKC,GAAG,KAAR,WACE,wBAAKJ,IACJD,EAAOM,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIN,EAAY,EAAZA,MACjB,OACE,SAAC,IAAD,CAAcI,GAAG,KAAKG,EAAG,EAAzB,UACE,SAAC,KAAD,CAASC,GAAIP,EAAMK,EAAIG,MAAOP,EAA9B,SAAyCF,KADjCM,EAIb,GAAE,MAGR,C,sGCOD,UAnBe,WACb,OAAmCI,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAClB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWF,EAAaG,IAAI,SAElC,GAAmCC,EAAAA,EAAAA,IAAqBF,EAAS,CAACG,MAAMH,IAAhEI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,IAFA,EAAqBC,YAEJD,EACjB,OACE,6BACE,kBAAME,SAAUX,GAJH,SAAAQ,GAAI,OAAIL,EAAgB,CAAES,MAAMJ,EAAKJ,UAAjC,IAIjB,WAEA,4BAAWL,EAAS,eACpB,mBAAQc,KAAK,SAAb,uBAECL,IAAQ,SAAC,IAAD,CAAWrB,OAAQqB,EAAKM,YAGtC,C","sources":["components/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport { Box } from 'components/Box';\n\nexport const MovieList = ({ movies, title = \"\", route = \"\" }) => {\n  const location = useLocation();\n  return (\n    <Box as=\"ul\">\n      <h1>{title}</h1>\n      {movies.map(({ id, title }) => {\n        return (\n          <Box key={id} as=\"li\" p={2}>\n            <NavLink to={route+id} state={location}>{title}</NavLink>\n          </Box>\n        );\n      }, \"\")}\n      </Box>\n  );\n};","import { useForm } from \"react-hook-form\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useSearchMoviesQuery } from \"api/themoviedb\"\nimport { MovieList } from \"components/MovieList\"\n\n// '/movies' - компонент Movies, страница поиска фильмов по ключевому слову.\nconst Movies = () => {\n  const { register, handleSubmit } = useForm();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get(\"query\");\n\n  const { data, error, isLoading } = useSearchMoviesQuery(filmName,{skip:!filmName,});\n  const onSubmit = data => setSearchParams({ query:data.filmName })\n  if (isLoading || error){return}\n  return (\n    <main>\n      <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input {...register(\"filmName\")} />\n      <button type=\"submit\">Search</button>\n      </form>\n      {data && <MovieList movies={data.results} />}\n    </main>\n  );\n};\nexport default Movies;"],"names":["MovieList","movies","title","route","location","useLocation","as","map","id","p","to","state","useForm","register","handleSubmit","useSearchParams","searchParams","setSearchParams","filmName","get","useSearchMoviesQuery","skip","data","error","isLoading","onSubmit","query","type","results"],"sourceRoot":""}