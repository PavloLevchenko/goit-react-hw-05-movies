{"version":3,"file":"static/js/415.8cb199f2.chunk.js","mappings":"wMAGaA,EAAa,SAACC,GAAD,OAASC,EAAAA,GAAAA,MAAYD,EAArB,EAE1BE,aAAaH,WAAa,CACxBC,IAAKG,IAAAA,OAAAA,W,kICDMC,EAAY,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAqC,IAA7BC,MAAAA,OAA6B,MAArB,GAAqB,MAAjBC,MAAAA,OAAiB,MAAT,GAAS,EACzDC,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,SAAC,IAAD,CAAKC,GAAG,KAAKC,GAAI,EAAGC,GAAI,EAAxB,SAA4BN,KACxB,SAAC,IAAD,CAAKI,GAAG,KAAKG,GAAI,EAAjB,SACHR,EAAOS,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIT,EAAY,EAAZA,MACjB,OACE,SAAC,IAAD,CAAcI,GAAG,KAAKM,EAAG,EAAzB,UACE,SAAC,KAAD,CAASC,GAAIV,EAAMQ,EAAIG,MAAOV,EAA9B,SAAyCF,KADjCS,EAIb,GAAE,QAIR,EACDb,aAAaE,UACXD,IAAAA,MAAgB,CAChBG,MAAOH,IAAAA,OAAAA,WACPI,MAAOJ,IAAAA,OAAAA,Y,2FCzBF,IAAMgB,EAAS,CACpBC,iBAAkB,uCAClBC,qBAAsB,kDACtBC,qBAAsB,gCACtBC,qBAAsB,uCAGXC,EAAM,CACjBC,QAAS,2CACTC,UAAW,2C,oHCSb,UAXa,WACT,OAAmCC,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAFA,EAAqBC,WAEG,SAAC,IAAD,IACpBD,GAAU,SAAgBV,EAAAA,EAAAA,mBAG1B,SAAC,IAAD,CAAKT,GAAG,OAAR,SACKkB,IAAQ,SAAC,IAAD,CAAWvB,OAAQuB,EAAKG,QAASzB,MAAM,iBAAiBC,MAAM,aAElF,C,mCCRD,IAAIyB,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAelC,EAAUmC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPL,CAQF,CAED,SAASG,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAe/C,UAAY+C,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/ErrorToast.jsx","components/MovieList.jsx","components/Strings.js","pages/Home.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nexport const ErrorToast = (msg) => toast.error(msg)\n\nNotification.ErrorToast = {\n  msg: PropTypes.string.isRequired,\n};","import { NavLink } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, title = \"\", route = \"\" }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Box as=\"h1\" mb={4} mt={4}>{title}</Box>\n          <Box as=\"ul\" pl={4}>\n      {movies.map(({ id, title }) => {\n        return (\n          <Box key={id} as=\"li\" p={2}>\n            <NavLink to={route+id} state={location}>{title}</NavLink>\n          </Box>\n        );\n      }, \"\")}\n      </Box>\n    </>\n  );\n};\nNotification.MovieList = \n  PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired\n})","export const Errors = {\n  getTrendingError: 'Error: unable to load trending films',\n  getMovieCreditsError: 'Error: unable to load сast members details',\n  getMovieRewiewsError: 'Error: unable to load rewiews',\n  getMovieDetailsError: 'Error: unable to load movie details',\n};\n\nexport const Msg = {\n  noCasts: \"We don't have cast info about this movie\",\n  noReviews: \"We don't have any reviews for this movie\",\n};\n","import { ErrorToast } from \"components/ErrorToast\"\nimport { Errors } from \"components/Strings\"\nimport { Box } from 'components/Box';\nimport { Loader } from \"components/Loader\"\nimport { MovieList } from \"components/MovieList\"\nimport { useGetTrendingQuery } from \"api/themoviedb\"\n\nconst Home = () => {\n    const { data, error, isLoading } = useGetTrendingQuery();\n\n    if (isLoading) { return <Loader/>}\n    if (error) { <ErrorToast msg={Errors.getTrendingError} />; return }\n    \n    return (\n        <Box as=\"main\">\n            {data && <MovieList movies={data.results} title=\"Trending today\" route=\"movies/\" />}\n        </Box>);\n}\nexport default Home;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ErrorToast","msg","toast","Notification","PropTypes","MovieList","movies","title","route","location","useLocation","as","mb","mt","pl","map","id","p","to","state","Errors","getTrendingError","getMovieCreditsError","getMovieRewiewsError","getMovieDetailsError","Msg","noCasts","noReviews","useGetTrendingQuery","data","error","isLoading","results","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}