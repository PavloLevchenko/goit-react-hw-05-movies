{"version":3,"file":"static/js/884.24cba690.chunk.js","mappings":"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","sources":["components/ErrorToast.jsx","components/ImageBox.jsx","components/Strings.js","components/MovieInfo.jsx","components/MovieDetailsNav.jsx","components/MovieDetails.jsx","api/helpers.js","components/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nexport const ErrorToast = (msg) => toast.error(msg)\n\nNotification.ErrorToast = {\n  msg: PropTypes.string.isRequired,\n};","import { Box } from 'components/Box';\nimport { baseImgUrl } from 'components/NavDeclarations'\nimport PropTypes from 'prop-types';\n\nexport const ImageBox = ({ poster_path, alt, width, children }) => {\n  const serverPath = baseImgUrl+width;\n  const imgPath = serverPath + poster_path;\n  return <Box>\n    {poster_path ? <img src={imgPath} alt={alt} /> : children}\n  </Box>\n}\n\nNotification.ImageBox =\nPropTypes.shape({\n  poster_path: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  children:PropTypes.element.isRequired\n})","export const Errors = {\n  getTrendingError: 'Error: unable to load trending films',\n  getMovieCreditsError: 'Error: unable to load сast members details',\n  getMovieRewiewsError: 'Error: unable to load rewiews',\n  getMovieDetailsError: 'Error: unable to load movie details',\n};\n\nexport const Msg = {\n  noCasts: \"We don't have cast info about this movie\",\n  noReviews: \"We don't have any reviews for this movie\",\n};\n","import { BsFileExcel } from \"react-icons/bs\";\nimport { Box } from 'components/Box';\nimport { ImageBox } from \"components/ImageBox\"\nimport PropTypes from 'prop-types';\n\nconst width = 342;\nconst colSize = `${width}px 1fr`;\n\nexport const MovieInfo = ({ title, overview, score, poster_path, genresString }) =>\n<Box display=\"grid\" gridTemplateColumns={colSize} borderBottom={\"1px solid black\"}>\n<ImageBox poster_path={poster_path} alt={title} width={width}><BsFileExcel size={width} /></ImageBox>\n  <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" p={4} gridGap={10}>\n      <h2>{title}</h2>\n      <p>User score: {score}%</p>\n      <p><b>Overview:</b></p>\n      {overview}\n      <p><b>Genres:</b></p>\n      {genresString}\n  </Box>\n</Box>\n\nNotification.MovieInfo = \nPropTypes.shape({\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  genresString:PropTypes.string.isRequired\n})","import { NavLink } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport { Box } from 'components/Box';\nimport { navMovieItems } from 'components/NavDeclarations';\n\nexport const MovieDetailsNav = () => {\n  const location = useLocation();\n  return (\n      <Box as=\"ul\" pl={4} borderBottom={\"1px solid black\"}>\n      {navMovieItems.map(({ href, text }) => (\n          <Box key={href} as=\"li\" p={2}>\n          <NavLink to={href} state={location.state}>{text}</NavLink>\n          </Box>\n        ))}\n    </Box>\n  );\n};","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport { MovieDetailsNav } from \"components/MovieDetailsNav\";\nimport { Loader } from \"components/Loader\"\n\nexport const MovieDetails = () =>\n<Box pt={4} pb={4}>\n  <Box as=\"p\" mb={2}>Additional information</Box>\n  <MovieDetailsNav />\n  <Suspense fallback={<Loader/>}>\n    <Outlet />\n  </Suspense>\n</Box>","export const genresHelper = genres => {\n  return genres.reduce(function (text, { name }) {\n    return text + ' ' + name;\n  }, '');\n};\n\nexport const movieInfoHelper = data => {\n  const { title, overview, vote_average, poster_path, genres } = data;\n  const score = Math.round(vote_average * 10);\n  const genresString = genresHelper(genres);\n  return { title, overview, score, poster_path, genresString };\n};\n","import { useParams } from \"react-router-dom\";\nimport { MovieInfo } from 'components/MovieInfo';\nimport { MovieDetails } from \"components/MovieDetails\"\nimport { ErrorToast } from \"components/ErrorToast\"\nimport { Errors } from \"components/Strings\"\nimport { useGetMovieDetailsQuery } from \"api/themoviedb\"\nimport { movieInfoHelper } from \"api/helpers\"\n\nexport const MovieCard = () => {\n  const { movieId } = useParams();\n  const { data, error, isLoading } = useGetMovieDetailsQuery(movieId);\n\n  if (isLoading) { return }\n  if (error) { <ErrorToast msg={Errors.getMovieDetailsError} />; return }\n\n  return (\n    <>\n    <MovieInfo {...movieInfoHelper(data)} />\n    <MovieDetails />\n    </>\n  );}","import { BsReplyFill } from \"react-icons/bs\";\nimport { Box } from 'components/Box';\nimport { MovieCard } from \"components/MovieCard\"\nimport { Link,useLocation } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n    const {state} = useLocation();\n    const path = state ? state.pathname + state.search : \"/\";\n    \n    return <Box as=\"main\">\n        <Box as=\"button\" type=\"button\" display=\"flex\" alignItems=\"center\" m={2}>\n            <Link to={path}><BsReplyFill />Go Back</Link>\n        </Box>\n        <MovieCard />\n    </Box>\n}\nexport default MovieDetails;"],"names":["ErrorToast","msg","toast","Notification","PropTypes","ImageBox","poster_path","alt","width","children","imgPath","baseImgUrl","src","Errors","getTrendingError","getMovieCreditsError","getMovieRewiewsError","getMovieDetailsError","Msg","noCasts","noReviews","colSize","MovieInfo","title","overview","score","genresString","Box","display","gridTemplateColumns","borderBottom","size","flexDirection","justifyContent","p","gridGap","MovieDetailsNav","location","useLocation","as","pl","navMovieItems","href","text","to","state","MovieDetails","pt","pb","mb","Suspense","fallback","Loader","movieInfoHelper","data","vote_average","genres","Math","round","reduce","name","genresHelper","MovieCard","movieId","useParams","useGetMovieDetailsQuery","error","isLoading","path","pathname","search","type","alignItems","m"],"sourceRoot":""}